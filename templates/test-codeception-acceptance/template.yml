#  Moselwal Digitalagentur Release Tools
#    Copyright (C) 2024  Moselwal Digitalagentur GmbH, Kai Ole Hartwig <support@moselwal.de>
#
#  This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <https://www.gnu.org/licenses/>.

spec:
  inputs:
    stage:
      default: 'test'
      description: "The stage in the CI/CD pipeline where this job will run.  "
    rules-config:
      description: "Configuration rules that determine when the job should run."
      type: array
      default:
        - if: $CI_DEPLOY_FREEZE == null && (($CI_COMMIT_BRANCH != 'release' && $CI_OPEN_MERGE_REQUESTS == null) || ($CI_COMMIT_BRANCH != 'release' && $CI_PIPELINE_SOURCE == 'merge_request_event'))
          exists:
            - codeception.yml
        - when: never
    needs-config:
      description: "Configure the jobs that needed to run this job."
      type: array
      default:
        - job: build:site:test:backend
          optional: true
          artifacts: true
        - job: build:prepare
          artifacts: true
    image-config:
      description: "The Docker image to use for the job. This should use semantic versioning."
      default: "$CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX/docker:26.0.0-alpine3.19"
    services-config:
      type: array
      default:
        - $CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX/docker:26.0.0-dind-alpine3.19
    tags-config:
      description: "Tags used to select specific runners to execute the job."
      type: array
      default:
        - docker
    additional-script-begin:
      description: "Add additional Script at the beginning of the Script."
      default: ''
    additional-script-end:
      description: "Add additional Script at the end of the Script."
      default: ''
---
test:codeception:acceptance:
  stage: $[[ inputs.stage ]]
  image: $[[ inputs.image-config | expand_vars ]]
  needs: $[[ inputs.needs-config ]]
  rules: $[[ inputs.rules-config ]]
  allow_failure: true
  tags: $[[ inputs.tags-config ]]
  variables:
    DOCKER_DRIVER: overlay2
  services: $[[ inputs.services-config ]]
  before_script:
    - echo "$CI_REGISTRY_PASSWORD" | docker login $CI_REGISTRY --username $CI_REGISTRY_USER --password-stdin
    - echo "$CI_DEPENDENCY_PROXY_PASSWORD" | docker login $CI_DEPENDENCY_PROXY_SERVER --username $CI_DEPENDENCY_PROXY_USER --password-stdin
  script:
    - $[[ inputs.additional-script-begin ]]
    - docker pull registry.moselwal.io/devops/images/php/$PHP_VERSION/ci:latest
    - docker pull mariadb:10.7.8
    - docker run -d --name database $CI_REGISTRY_IMAGE/database:latest
    - docker create --name demo --link database:db -p 8080:80 mariadb:10.7.8
    - docker cp . test:/app
    - docker start test
    - docker exec test sh -c "cd /app && vendor/bin/codecept run acceptance"
    - docker stop test
    - docker stop database
    - docker rm test
    - docker rm database
    - $[[ inputs.additional-script-end ]]
  after_script:
    - docker rmi registry.moselwal.io/devops/images/php/$PHP_VERSION/ci:latest
    - docker rmi mariadb:10.7.8
    - docker logout $CI_REGISTRY
    - docker logout $CI_DEPENDENCY_PROXY_SERVER
  artifacts:
    when: always
    expire_in: 1 day
    paths:
      - Tests/_output/*
    reports:
      coverage_report:
        coverage_format: cobertura
        path: Tests/_output/cobertura.xml
      junit: Tests/_output/report.xml