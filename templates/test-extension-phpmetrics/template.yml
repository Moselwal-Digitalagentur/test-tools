#  Moselwal Digitalagentur Release Tools
#    Copyright (C) 2024  Moselwal Digitalagentur GmbH, Kai Ole Hartwig <support@moselwal.de>
#
#  This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <https://www.gnu.org/licenses/>.

spec:
  inputs:
    stage:
      default: 'test'
      description: "The stage in the CI/CD pipeline where this job will run.  "
    rules-config:
      description: "Configuration rules that determine when the job should run."
      type: array
      default:
        - if: ($CI_COMMIT_BRANCH != 'release' && $CI_OPEN_MERGE_REQUESTS == null) || ($CI_COMMIT_BRANCH != 'release' && $CI_PIPELINE_SOURCE == 'merge_request_event')
          exists:
            - ./**/*.php
        - when: never
    needs-config:
      description: "Configure the jobs that needed to run this job."
      type: array
      default:
        - job: lint:phplint
          optional: true
        - job: build:extension:backend
          optional: true
          artifacts: true
        - job: build:prepare
          optional: true
          artifacts: true
    image-config:
      description: "The Docker image to use for the job. This should use semantic versioning."
      default: "registry.moselwal.io/devops/images/php/$PHP_VERSION/ci:latest"
    tags-config:
      description: "Tags used to select specific runners to execute the job."
      type: array
      default:
        - docker
    additional-script-begin:
      description: "Add additional Script at the beginning of the Script."
      default: ''
    additional-script-end:
      description: "Add additional Script at the end of the Script."
      default: ''
---
test:extension:phpmetrics:
  stage: $[[ inputs.stage ]]
  image: $[[ inputs.image-config | expand_vars ]]
  needs: $[[ inputs.needs-config ]]
  rules: $[[ inputs.rules-config ]]
  allow_failure: false
  tags: $[[ inputs.tags-config ]]
  before_script:
    - composer req phpmetrics/phpmetrics
  script:
    - $[[ inputs.additional-script-begin ]]
    - .composer/bin/phpmetrics --report-summary-json=phpmetrics/summary.json  --config=phpmetrics/config-non-fail.json --report-html=phpmetrics/html-report/  --git .
    - |
      json=$(cat phpmetrics/summary.json)
      linesOfCode=$(echo $json | jq '.LOC.linesOfCode')
      color=blue
      echo "<svg xmlns='http://www.w3.org/2000/svg' width='115' height='20'>
        <linearGradient id='a' x2='0' y2='100%'>
        <stop offset='0' stop-color='#bbb' stop-opacity='.1'/>
        <stop offset='1' stop-opacity='.1'/>
        </linearGradient>
        <rect rx='3' width='115' height='20' fill='#555'/>
        <rect rx='3' x='37' width='78' height='20' fill='${color}'/>
        <path fill='${color}' d='M37 0h4v20h-4z'/>
        <rect rx='3' width='115' height='20' fill='url(#a)'/>
        <g fill='#fff' text-anchor='middle' font-family='DejaVu Sans,Verdana,Geneva,sans-serif' font-size='11'>
        <text x='57' y='15' fill='#010101' fill-opacity='.3'>Lines of Code</text>
        <text x='57' y='14'>Lines of Code</text>
        <text x='98' y='15' fill='#010101' fill-opacity='.3'>${linesOfCode}</text>
        <text x='98' y='14'>${linesOfCode}</text>
        </g>
        </svg>"  > badge-loc.svg
    - |
      json=$(cat phpmetrics/summary.json)
      CCN=$(echo $json | jq '.Complexity.avgCyclomaticComplexityByClass')
        if [ "$CCN" -gt 10 ]; then
          echo "<svg xmlns='http://www.w3.org/2000/svg' width='100' height='20'><rect x='0' y='0' width='100' height='20' fill='red'/><text x='50' y='14' font-size='11' fill='white' text-anchor='middle'>CCN: $CCN</text></svg>" > badge-ccn.svg
        else
          echo "<svg xmlns='http://www.w3.org/2000/svg' width='100' height='20'><rect x='0' y='0' width='100' height='20' fill='green'/><text x='50' y='14' font-size='11' fill='white' text-anchor='middle'>CCN: $CCN</text></svg>" > badge-ccn.svg
        fi

    - .composer/bin/phpmetrics --config=phpmetrics/config.json .
    - $[[ inputs.additional-script-end ]]

  artifacts:
    when: always
    expire_in: 1 day
    paths:
      - phpmetrics/*
      - badge-loc.svg
      - badge-ccn.svg
